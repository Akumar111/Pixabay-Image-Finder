{"version":3,"sources":["components/navbar/NavBar.js","components/image-results/ImageResults.js","components/search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","title","ImageResults","state","open","currentImg","handleOpen","img","setState","handleClose","imageListContent","images","this","props","GridList","cols","map","tags","subtitle","user","actionIcon","onClick","largeImageURL","color","src","alt","id","actions","label","primary","modal","onRequestClose","style","width","Component","Search","searchText","amount","apiUrl","apiKey","onTextChange","e","val","target","value","name","axios","get","then","res","data","hits","catch","err","console","log","onAmountChange","index","onChange","floatingLabelText","fullWidth","primaryText","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcf7fa22.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from 'material-ui/AppBar'\r\n\r\nconst NavBar = () => <AppBar title=\"PixaBay Image Finder\" />;\r\n\r\nexport default NavBar\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GridList, GridTile } from 'material-ui/GridList';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\r\nimport Dialog from 'material-ui/Dialog';\r\nimport FlatButton from 'material-ui/FlatButton';\r\n\r\nclass ImageResults extends Component {\r\n    state = {\r\n        open: false,\r\n        currentImg: ''\r\n    };\r\n\r\n    handleOpen = img => {\r\n        this.setState({ open: true, currentImg: img });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        let imageListContent;\r\n        const { images } = this.props;\r\n\r\n        if (images) {\r\n            imageListContent = (\r\n                <GridList cols={4}>\r\n                    {images.map(img => (\r\n                        <GridTile\r\n                            title={img.tags}\r\n                            key={img.id}\r\n                            subtitle={\r\n                                <span>\r\n                                    by <strong>{img.user}</strong>\r\n                                </span>\r\n                            }\r\n                            actionIcon={\r\n                                <IconButton onClick={() => this.handleOpen(img.largeImageURL)}>\r\n                                    <ZoomIn color=\"white\" />\r\n                                </IconButton>\r\n                            }\r\n                        >\r\n                            <img src={img.largeImageURL} alt=\"\" />\r\n                        </GridTile>\r\n                    ))}\r\n                </GridList>\r\n            );\r\n        } else {\r\n            imageListContent = null;\r\n        }\r\n\r\n        const actions = [\r\n            <FlatButton label=\"Close\" primary={true} onClick={this.handleClose} />\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                {imageListContent}\r\n                <Dialog\r\n                    actions={actions}\r\n                    modal={false}\r\n                    open={this.state.open}\r\n                    onRequestClose={this.handleClose}\r\n                >\r\n                    <img src={this.state.currentImg} alt=\"\" style={{ width: '100%' }} />\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nImageResults.propTypes = {\r\n    images: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ImageResults;","import React, { Component } from 'react';\r\nimport TextField from 'material-ui/TextField';\r\nimport SelectField from 'material-ui/SelectField';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport axios from 'axios';\r\nimport ImageResults from '../image-results/ImageResults'\r\n\r\nclass Search extends Component {\r\n\r\n    state = {\r\n        searchText: '',\r\n        amount: 15,\r\n        apiUrl: 'https://pixabay.com/api',\r\n        apiKey: '20834163-5795a74653e0ac2234bf272d8',\r\n        images: []\r\n    }\r\n\r\n    onTextChange = (e) => {\r\n        const val = e.target.value;\r\n        this.setState({ [e.target.name]: val }, () => {\r\n            if (val === '') {\r\n                this.setState({ images: [] })\r\n            } else {\r\n                axios\r\n                    .get(`${this.state.apiUrl}/?key=${this.state.apiKey}&q=${this.state.searchText}&image_type=photo&per_page=${this.state.amount}&safesearch=true`)\r\n                    .then(res => this.setState({ images: res.data.hits }))\r\n                    .catch(err => console.log(err));\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    onAmountChange = (e, index, value) => {\r\n        this.setState({\r\n            amount: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.images)\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    name=\"searchText\"\r\n                    value={this.state.searchText}\r\n                    onChange={this.onTextChange}\r\n                    floatingLabelText=\"Search For Images\"\r\n                    fullWidth={true}\r\n                />\r\n                <br />\r\n                <SelectField\r\n                    name=\"amount\"\r\n                    floatingLabelText=\"Amount\"\r\n                    value={this.state.amount}\r\n                    onChange={this.onAmountChange}\r\n                >\r\n                    <MenuItem value={5} primaryText=\"5\" />\r\n                    <MenuItem value={10} primaryText=\"10\" />\r\n                    <MenuItem value={15} primaryText=\"15\" />\r\n                    <MenuItem value={30} primaryText=\"30\" />\r\n                    <MenuItem value={50} primaryText=\"50\" />\r\n                </SelectField>\r\n                <br />\r\n                {this.state.images.length > 0 ? <ImageResults images={this.state.images} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport NavBar from './components/navbar/NavBar';\nimport Search from './components/search/Search';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n\nfunction App() {\n  return (\n    <MuiThemeProvider>\n      <div>\n        <NavBar />\n        <Search />\n      </div>\n    </MuiThemeProvider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}